#!/bin/bash
set -e

# produce only one output file so that this can be ran in parallel without races
OUT=$1
case $OUT in
    *.c)
        function create_string_array()
        {
            local arrayname=$1
            local countname=$2
            shift 2

            echo "const char *$arrayname[] = {"
            printf '\t"%s",\n' "$@"
            echo '};'
        }
        START='#include "filelist.h"'
        ;;

    *.h)
        function create_string_array()
        {
            local arrayname=$1
            local countname=$2
            shift 2

            echo "extern const char *$arrayname[];"
            echo "#define $countname $#"
        }
        START=$'#ifndef FILELIST_H\n#define FILELIST_H'
        END='#endif'
        ;;

    *)
        echo "Usage: $0 FILE" >&2
        exit 2
esac

echo "// generated by $0" > $OUT
echo "$START" >> $OUT

# from sort(1): "The locale specified by the environment affects sort order. Set
# LC_ALL=C to get the traditional sort order that uses native byte values."
sounds=$(find sounds -name '*.wav' | LC_ALL=C sort)

# variable names written here as they are to make this script more greppable
create_string_array filelist_players FILELIST_NPLAYERS players/*.png >> $OUT
create_string_array filelist_sounds FILELIST_NSOUNDS $sounds >> $OUT

echo "$END" >> $OUT
