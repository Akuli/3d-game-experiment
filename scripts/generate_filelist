#!/bin/bash
set -e
echo "// generated by $0"

# produce only one output file at a time so that this can be ran in parallel without races
cd $1
case $2 in
    .c)
        function create_string_array()
        {
            local arrayname=$1
            local countname=$2
            shift 2

            echo "const char *$arrayname[] = {"
            printf '\t"%s",\n' "$@"
            echo '};'
        }
        echo '#include "filelist.h"'
        ;;

    .h)
        function create_string_array()
        {
            local arrayname=$1
            local countname=$2
            shift 2

            echo "extern const char *$arrayname[];"
            echo "#define $countname $#"
        }
        echo '#ifndef FILELIST_H'
        echo '#define FILELIST_H'
        trap "echo '#endif'" exit
        ;;

    *)
        echo "Usage: $0 .c" >&2
        echo "or:    $0 .h" >&2
        exit 2
esac

# from sort(1): "The locale specified by the environment affects sort order. Set
# LC_ALL=C to get the traditional sort order that uses native byte values."
sounds=$(find sounds -name '*.wav' | LC_ALL=C sort)

# variable names written here as they are to make this script more greppable
create_string_array filelist_players FILELIST_NPLAYERS players/*.png
create_string_array filelist_sounds FILELIST_NSOUNDS $sounds
